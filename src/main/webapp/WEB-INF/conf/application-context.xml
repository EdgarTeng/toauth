<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!-- Get an instance of Settings class with default/mode properties injected 
		** Properties defined in mode specific properties files (e.g. dev, prod) 
		will override the properties in default.properties ** Properties defined 
		in properties files need a getter defined in the Settings class before they 
		can be used -->
	<bean id="appSettings" class="com.tenchael.toauth.commons.Settings">
		<property name="configProperties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="propertiesArray">
					<list>
						<bean
							class="org.springframework.beans.factory.config.PropertiesFactoryBean">
							<property name="location" value="classpath:/props/application.properties" />
						</bean>
					</list>
				</property>
			</bean>
		</property>
	</bean>

</beans>